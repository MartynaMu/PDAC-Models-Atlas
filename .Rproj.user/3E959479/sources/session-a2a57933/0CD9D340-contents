---
title: "PDAC models - cell line protein-mRNA correlation"
author: "Martyna Siewiera"
date: "2025-07-10"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/R_projects/PDAC-in-vitro-models-atlas")
```

### Cell line-dependant protein-mRNA expression correlation

#### Libraries

```{r libraries}
libs <- list("tidyverse", "ggpubr")
lapply(libs, require, character.only=TRUE)
```


#### 
Unify column names between mRNA and protein expression datasets

```{r unify-colnames}
colnames(df.rna) <- colnames(df.rna) %>%
  str_sub(start=5)
```

####
Find the genes overlapping both datasets, accordingly filter the datasets

```{r union-filter}
union <- intersect(rownames(df.rna), rownames(qnorm))

prot.cor.prep <- as.data.frame(qnorm) %>%
  filter(rownames(qnorm) %in% union)

rna.cor.prep <- df.rna %>%
  filter(rownames(df.rna) %in% union)
```

####
Create a column selection filter

```{r col-filter}
group.str <- paste0(c("PANC", "MIAPACA", "CFPAC"), ".+[1-3]$")
```

#### 
Create an empty data.frame, to which a new column with protein-mRNA correlation values per cell line will be bound for each protein

```{r corr-calc}
cor.mat <- matrix(nrow = length(union), ncol=1) %>% as.data.frame()
for (g in group.str) { # do so for each cell line expression
  temp.col <- c()
  for (i in 1:length(union)) { # do so for each protein
      
    prot.1 <- prot.cor.prep %>%
      slice(i) %>%
      select(matches(g)) %>%
      t() %>%
      as.data.frame() %>%
      pull()
    
    
    rna.1 <- rna.cor.prep %>%
      slice(i) %>%
      select(matches(g)) %>%
      t() %>%
      as.data.frame() %>%
      pull()
    
    prot.rna.cor <- cor(prot.1, rna.1, use = "pairwise.complete.obs", method = "pearson")
    temp.col <- c(temp.col, prot.rna.cor)
  }
  cor.mat <- cbind(cor.mat, temp.col)
}
```

####
Change to new colnames, remove an empty column and add Genes as rownames

```{r tidy-corr-mat}
colnames(cor.mat) <- c("V1", "PANC", "MIAPACA", "CFPAC")
cor.mat <- select(cor.mat, -1)
rownames(cor.mat) <- union
```

#### 
Calculate prot-mRNA correlation coefficient variance between cell lines and sort accordingly

```{r corr-var-calc}
cor.mat <- cor.mat %>% 
  rowwise() %>% 
  mutate(Cell.line.Var = var(c_across(everything())))

cor.mat <- cbind(cor.mat,Genes = union)
cor.mat <- cor.mat %>% 
  arrange(desc(Cell.line.Var))

```


####
Filter correlation coefficients to a high absolute correlation and large variance

```{r filter-corr-mat}
poi <- cor.mat %>% 
  filter(if_any(1:3, ~ abs(.x) > 0.55) & Cell.line.Var > 0.3)
```

####
Plot proteins, which expression is highly correlated with their mRNA expression and its change is large between cell lines

```{r plot-poi}
poi %>%
  slice(1:200) %>%
  pivot_longer(1:3,
               names_to = "Cell.line",
               values_to = "prot.mRNA.corr") %>%
  ggplot(aes(x = Cell.line,
             y = Genes,
             color = prot.mRNA.corr,
             size = Cell.line.Var)) +
  geom_point()+
  scale_color_distiller(palette = "RdBu")
```

